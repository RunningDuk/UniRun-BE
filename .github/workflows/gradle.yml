name: Unirun Spring Boot server build and deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build JAR file
        run: ./gradlew build -x test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      - name: Create .env file
        run: |
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo "DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD } >> .env
          echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }} >> .env
          echo "JASYPT_ENCRYPTOR_KEY=${{ secrets.JASYPT_ENCRYPTOR_KEY }} >> .env
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} >> .env
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} >> .env

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        if: contains(github.ref, 'main')
        with:
          host: ${{ secrets.MAIN_HOST }}
          username: ${{ secrets.MAIN_USERNAME }}
          key: ${{ secrets.MAIN_SSH_KEY }}
          port: 22
          script: |
            docker-compose pull
            docker-compose down
            docker-compose up -d springboot 
