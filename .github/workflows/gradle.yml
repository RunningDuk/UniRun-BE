name: Unirun Spring Boot server build and deploy

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_URL: ${{ secrets.DB_URL }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      JASYPT_ENCRYPTOR_KEY: ${{ secrets.JASYPT_ENCRYPTOR_KEY }}
      KAKAO_CLIENT_ID: ${{ secrets.KAKAO_CLIENT_ID }}
      KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build JAR file
        run: ./gradlew build -x test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CONTAINER_REGISTRY_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile  # Dockerfile 경로
          push: true
          tags: ghcr.io/${{ github.actor }}/unirun-api-server:v1.0  # 현재 액션 실행자의 이름으로 이미지 태그 생성

  deploy-main:
    runs-on: ubuntu-latest
    needs: build  # build 작업이 완료된 후 실행
    if: github.ref == 'refs/heads/main'  # main 브랜치에서만 실행

    steps:
      - name: Deploy to EC2 Main
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            echo "Current working directory:"
            pwd
            
            echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Docker Compose 실행
            docker-compose pull
            docker-compose down
            docker-compose up -d springboot

  deploy-develop:
    runs-on: ubuntu-latest
    needs: build  # build 작업이 완료된 후 실행
    if: github.ref == 'refs/heads/develop'  # develop 브랜치에서만 실행

    steps:
      - name: Deploy to EC2 Develop
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_DEV_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_DEV_KEY }}
          port: 22
          script: |
            echo "Current working directory:"
            pwd
            
            echo ${{ secrets.CONTAINER_REGISTRY_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            
            # Docker Compose 실행
            docker-compose pull
            docker-compose down
            docker-compose up -d springboot
